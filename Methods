    private String getElementName(WebElement targetElement) {
        try {
            StackTraceElement[] stackTrace = Thread.currentThread().getStackTrace();
            // Find the caller of the click method
            StackTraceElement caller = stackTrace[3]; // Adjust this index if needed

            Class<?> callerClass = Class.forName(caller.getClassName());

            // Try to get an instance of the caller class
            Object callerInstance = null;
            try {
                callerInstance = callerClass.getDeclaredConstructor().newInstance();
            } catch (Exception e) {
                // If we can't create an instance, we'll work with static fields only
            }

            // Iterate through all fields in the caller class
            for (Field field : callerClass.getDeclaredFields()) {
                field.setAccessible(true);
                if (WebElement.class.isAssignableFrom(field.getType())) {
                    Object fieldValue;
                    if (java.lang.reflect.Modifier.isStatic(field.getModifiers())) {
                        fieldValue = field.get(null);
                    } else if (callerInstance != null) {
                        fieldValue = field.get(callerInstance);
                    } else {
                        continue; // Skip non-static fields if we don't have an instance
                    }

                    if (fieldValue == targetElement) {
                        return field.getName();
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return "unknown";
    }
